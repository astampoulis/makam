fluid : type -> type.

%extend fluid.

current_value : fluid A.

get : fluid A -> A -> prop.
set : fluid A -> A -> cmd -> prop.
set : fluid A -> A -> prop -> prop.
modify : fluid A -> (A -> A -> prop) -> prop -> prop.
inc : fluid int -> prop -> prop.

current_value : [A] fluid A -> A -> prop.

get X Value <- demand.most_recent (current_value X Value'), eq Value Value'.
set X Value (cmd_newclause (clause (current_value X Value) success)).
set X Value Pred <- (current_value X Value -> Pred).
modify X Modify Pred <- get X CurrentValue, Modify CurrentValue NewValue, set X NewValue Pred.
inc X Pred <- modify X (plus 1) Pred.

%end.
