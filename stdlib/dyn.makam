(* Builtin definitions:

dyn : type.
dyn : A -> dyn.

*)

%extend dyn.

call : forall Z (A -> B -> prop) -> dyn -> dyn -> prop.
call P (dyn X) (dyn Y) :- forall.apply P X Y.

call : forall Z (A -> B -> C -> prop) -> dyn -> dyn -> dyn -> prop.
call P (dyn X) (dyn Y) (dyn Z) :- forall.apply P X Y Z.

to_args : [A B] list dyn -> args A B -> prop.
to_args [] [].
to_args (dyn HD :: TL) (HD :: TL') :- to_args TL TL'.

from_args : [A B] args A B -> list dyn -> prop.
from_args [] [].
from_args (HD :: TL) (dyn HD :: TL') :- from_args TL TL'.
%end.
