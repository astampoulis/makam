(* TODO: isnvar is broken for lambdas, investigate. this is a stopgap *)
%extend builtin.
%extend refl.
isnvar : [A]A -> prop.
isnvar X :- .refl.isnvar X.
%end.
%end.

%extend refl.

(* `stdlib/dyn` depends on this, but we need dynamic equality *)
%extend temp.
dyneq : [B]A -> B -> prop.
dyneq X X.
%end.

islambdaunif : [A]A -> prop.
islambdaunif (X: A) :-
  if (refl.isunif X) then success
  else (not(typ.isunif (_: A)), temp.dyneq X (Z: C -> D), (x:A -> islambdaunif (Z x))).

isnvar : [A]A -> prop.
isnvar X when newnmeta (pfun x => (eq x X, not(refl.islambdaunif x))).
%end.

